name: Automatisation des tests
on: push
jobs:
  Compilation:
    runs-on: ubuntu-latest
    steps:
      - name: Compilation
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          make test
  Test_Add:
    runs-on: ubuntu-latest
    needs: Compilation
    steps:
      - name: Test fonction add
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          out="$(./src/calculator add 2 3)"
          expected="5.000000"
          if [ "$out" != "expected" ]; then
            echo "Wrong output, expected $expected, but received $out."
            exit 1
          fi
          echo "good output $out."
  Test_Div:
    runs-on: ubuntu-latest
    needs: Compilation
    steps:
      - name: Test fonction div
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          out="$(./src/calculator div 1 5)"
          expected="0.200000"
          if [ "$out" != "$expected" ]; then
            echo "Wrong output, expected $expected, but received $out."
            exit 1
          fi
          echo "good output $out."
  Test_Mul:
    runs-on: ubuntu-latest
    needs: Compilation
    steps:
      - name: Test fonction mul
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          out="$(./src/calculator mul 5 5)"
          expected="25.000000"
          if [ "$out" != "$expected" ]; then
            echo "Wrong output, expected $expected, but received $out."
            exit 1
          fi
          echo "good output $out."
  Test_Sub:
    runs-on: ubuntu-latest
    needs: Compilation
    steps:
      - name: Test fonction sub
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          out="$(./src/calculator sub 3 -2)"
          expected="5.000000"
          if [ "$out" != "$expected" ]; then
            echo "Wrong output, expected $expected, but received $out."
            exit 1
          fi
          echo "good output $out."
  Test_Car:
    runs-on: ubuntu-latest
    needs: Compilation
    steps:
      - name: Test fonction car
        run: |
          last_directory=$(basename ${{ runner.workspace }})
          git clone https://github.com/${{ github.repository }}.git
          cd ./$last_directory
          mkdir build
          cd build
          cmake ..
          make
          out="$(./src/calculator car 5)"
          expected="25.000000"
          if [ "$out" != "$expected" ]; then
            echo "Wrong output, expected $expected, but received $out."
            exit 1
          fi
          echo "good output $out."
  Deployment:
    runs-on: ubuntu-latest
    needs: [Test_Add, Test_Sub, Test_Mul, Test_Div, Test_Car]
    steps:
      - name: Test Deployment
        run: |
          echo "DÃ©ploiement de la solution"
